<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--  
	2018.02.23	이원식	최초작성
	2021.03.30	이재우	성능개선
-->
<mapper namespace="omc.spop.dao.BoardDao">	
	<select id="getBoardManagement" parameterType="boardManagement" resultType="boardManagement">
	/* boardDao.getBoardManagement */
		SELECT BOARD_MGMT_NO, BOARD_TYPE_CD, BOARD_NM, FILE_ADD_YN, COMMENT_USE_YN, BOARD_USE_YN
		FROM BOARD_MANAGEMENT
		WHERE BOARD_MGMT_NO = #{board_mgmt_no}
	</select>	

	<select id="getBoardListCount" parameterType="board" resultType="int">
	/* boardDao.getBoardListCount */
		SELECT COUNT(*) AS TOTCNT
		FROM BOARD A
		WHERE A.BOARD_MGMT_NO = #{board_mgmt_no}
		AND A.TOP_NOTICE_YN = 'N'
		AND A.DEL_YN = 'N'
		<choose>
			<when test="searchKey != null and (searchKey eq '01'.toString())">
				AND A.TITLE LIKE '%' || #{searchValue} || '%'
			</when>
			<when test="searchKey != null and (searchKey eq '02'.toString())">
				AND A.CONTENTS LIKE '%' || #{searchValue} || '%'
			</when>
			<when test="searchKey != null and (searchKey eq '03'.toString())">
				AND (A.TITLE LIKE '%' || #{searchValue} || '%' OR A.CONTENTS LIKE '%' || #{searchValue} || '%')
			</when>
		</choose>	
	</select>
	
	<sql id="boardListRefid" >
	/* boardDao.boardListRefId */
  SELECT 0 AS RNUM, TOP.*
			FROM
			(
				SELECT BOARD_NO, TITLE, DEPTH, LVL, 
					(SELECT COUNT(*) FROM BOARD_COMMENT X 
					WHERE A.BOARD_MGMT_NO = X.BOARD_MGMT_NO 
					AND A.BOARD_NO = X.BOARD_NO
					AND X.DEL_YN = 'N') AS COMMENT_CNT,
					HIT_CNT, TO_CHAR(A.REG_DT, 'YYYY-MM-DD HH24:MI') AS REG_DT, REG_ID, B.USER_NM AS REG_NM, 
					A.UPD_ID, TO_CHAR(A.UPD_DT, 'YYYY-MM-DD HH24:MI:SS') AS UPD_DT, C.USER_NM AS UPD_NM
				FROM BOARD A, USERS B, USERS C
				WHERE BOARD_MGMT_NO = #{board_mgmt_no}
				AND A.REG_ID = B.USER_ID
				AND A.UPD_ID = C.USER_ID
				AND TOP_NOTICE_YN = 'Y'
				AND DEL_YN = 'N'
				ORDER BY REG_DT DESC
			) TOP
			UNION ALL
			SELECT ROWNUM AS RNUM, A.*
			FROM
			(
				SELECT A.BOARD_NO, A.TITLE, A.DEPTH, A.LVL, 
					(SELECT COUNT(*) FROM BOARD_COMMENT X 
					WHERE A.BOARD_MGMT_NO = X.BOARD_MGMT_NO 
					AND A.BOARD_NO = X.BOARD_NO
					AND X.DEL_YN = 'N') AS COMMENT_CNT,
					A.HIT_CNT, TO_CHAR(A.REG_DT, 'YYYY-MM-DD HH24:MI') AS REG_DT, A.REG_ID, B.USER_NM AS REG_NM, 
					A.UPD_ID, TO_CHAR(A.UPD_DT, 'YYYY-MM-DD HH24:MI:SS') AS UPD_DT, C.USER_NM AS UPD_NM
				FROM BOARD A, USERS B, USERS C
				WHERE A.BOARD_MGMT_NO = #{board_mgmt_no}
				AND A.REG_ID = B.USER_ID
				AND A.UPD_ID = C.USER_ID
				AND A.TOP_NOTICE_YN = 'N'
				AND A.DEL_YN = 'N'
				<choose>
					<when test="searchKey != null and (searchKey eq '01'.toString())">
						AND A.TITLE LIKE '%' || #{searchValue} || '%'
					</when>
					<when test="searchKey != null and (searchKey eq '02'.toString())">
						AND A.CONTENTS LIKE '%' || #{searchValue} || '%'
					</when>
					<when test="searchKey != null and (searchKey eq '03'.toString())">
						AND (A.TITLE LIKE '%' || #{searchValue} || '%' OR A.CONTENTS LIKE '%' || #{searchValue} || '%')
					</when>
				</choose>	
				ORDER BY A.REF_BOARD_NO DESC, A.LVL ASC
			) A
	</sql>
	
	<select id="boardList" parameterType="board" resultType="board">
	/* boardDao.boardList */
		SELECT AL.*
		FROM
		(
		<include refid="boardListRefid"/>
		) AL
		WHERE AL.RNUM BETWEEN #{startRowNum}+1 AND #{endRowNum} OR RNUM = 0
	</select>
	<select id="boardListByExcelDown" parameterType="board" resultType="java.util.LinkedHashMap">
	/* boardDao.boardListByExcelDown */
		<include refid="boardListRefid"/>
	</select>
	
	
	<select id="boardList_old" parameterType="board" resultType="board">
		/* boardDao.boardList */
		SELECT AL.*
		FROM
		(		
			SELECT 0 AS RNUM, TOP.*
			FROM
			(
				SELECT BOARD_NO, TITLE, DEPTH, LVL, 
					(SELECT COUNT(*) FROM BOARD_COMMENT X 
					WHERE A.BOARD_MGMT_NO = X.BOARD_MGMT_NO 
					AND A.BOARD_NO = X.BOARD_NO
					AND X.DEL_YN = 'N') AS COMMENT_CNT,
					HIT_CNT, TO_CHAR(A.REG_DT, 'YYYY-MM-DD HH24:MI') AS REG_DT, REG_ID, B.USER_NM AS REG_NM
				FROM BOARD A, USERS B
				WHERE BOARD_MGMT_NO = #{board_mgmt_no}
				AND A.REG_ID = B.USER_ID
				AND TOP_NOTICE_YN = 'Y'
				AND DEL_YN = 'N'
				ORDER BY REG_DT DESC
			) TOP
			UNION ALL
			SELECT ROWNUM AS RNUM, A.*
			FROM
			(
				SELECT A.BOARD_NO, A.TITLE, A.DEPTH, A.LVL, 
					(SELECT COUNT(*) FROM BOARD_COMMENT X 
					WHERE A.BOARD_MGMT_NO = X.BOARD_MGMT_NO 
					AND A.BOARD_NO = X.BOARD_NO
					AND X.DEL_YN = 'N') AS COMMENT_CNT,
					A.HIT_CNT, TO_CHAR(A.REG_DT, 'YYYY-MM-DD HH24:MI') AS REG_DT, A.REG_ID, B.USER_NM AS REG_NM
				FROM BOARD A, USERS B
				WHERE A.BOARD_MGMT_NO = #{board_mgmt_no}
				AND A.REG_ID = B.USER_ID
				AND A.TOP_NOTICE_YN = 'N'
				AND A.DEL_YN = 'N'
				<choose>
					<when test="searchKey != null and (searchKey eq '01'.toString())">
						AND A.TITLE LIKE '%' || #{searchValue} || '%'
					</when>
					<when test="searchKey != null and (searchKey eq '02'.toString())">
						AND A.CONTENTS LIKE '%' || #{searchValue} || '%'
					</when>
					<when test="searchKey != null and (searchKey eq '03'.toString())">
						AND (A.TITLE LIKE '%' || #{searchValue} || '%' OR A.CONTENTS LIKE '%' || #{searchValue} || '%')
					</when>
				</choose>
				ORDER BY A.REF_BOARD_NO DESC, A.LVL ASC
			) A
		) AL
		WHERE RNUM BETWEEN (${startRowNum} + 1) AND ${endRowNum}
		<if test="startRowNum eq 0">
			OR RNUM = 0
		</if>
	</select>
	
	<update id="updateBoardHitCnt" parameterType="board">
		/* boardDao.updateBoardHitCnt*/
		UPDATE BOARD SET HIT_CNT = HIT_CNT + 1
		WHERE BOARD_MGMT_NO = #{board_mgmt_no} AND BOARD_NO = #{board_no}
	</update>	
	
	<select id="getBoard" parameterType="board" resultType="board">
		/* boardDao.getBoard*/
		SELECT A.BOARD_NO, A.TITLE, A.CONTENTS AS BOARD_CONTENTS, A.TOP_NOTICE_YN, A.REF_BOARD_NO, A.TOP_BOARD_NO, A.DEPTH, A.LVL,
			A.HIT_CNT, TO_CHAR(A.REG_DT, 'YYYY-MM-DD HH24:MI') AS REG_DT, A.REG_ID, B.USER_NM AS REG_NM, A.UPD_DT, A.UPD_ID, C.USER_NM AS UPD_NM 
		FROM BOARD A, USERS B,  USERS C
		WHERE A.BOARD_MGMT_NO = #{board_mgmt_no}
		AND A.BOARD_NO = #{board_no}
		AND A.REG_ID = B.USER_ID
		AND A.UPD_ID = C.USER_ID
		AND A.DEL_YN = 'N'
	</select>

	<select id="getMaxBoardNo" parameterType="board" resultType="string">
		/* boardDao.getMaxBoardNo*/
		SELECT NVL(MAX(BOARD_NO) + 1, 1) AS BOARD_NO
		FROM BOARD
		WHERE BOARD_MGMT_NO = #{board_mgmt_no}
	</select>
	
	<insert id="insertBoard" parameterType="board">
		/* boardDao.insertBoard*/
		INSERT INTO BOARD (
			BOARD_MGMT_NO, BOARD_NO, TOP_NOTICE_YN, TITLE, CONTENTS, REF_BOARD_NO, TOP_BOARD_NO, DEPTH, LVL, HIT_CNT, 
			DEL_YN, REG_DT, REG_ID, UPD_DT, UPD_ID )
		VALUES (
			#{board_mgmt_no}, #{board_no}, #{top_notice_yn}, #{title}, #{board_contents}, #{ref_board_no}, #{top_board_no}, #{depth}, #{lvl}, #{hit_cnt},
			'N', SYSDATE, #{reg_id}, SYSDATE, #{upd_id}
		)
	</insert>
	
	<update id="updateBoard" parameterType="board">
		/* boardDao.updateBoard*/
		UPDATE BOARD
		<set>
			<if test="top_notice_yn != null">TOP_NOTICE_YN = #{top_notice_yn},</if>
			<if test="title != null">TITLE = #{title},</if>
			<if test="board_contents != null">CONTENTS = #{board_contents},</if>
			<if test="upd_id != null">UPD_ID = #{upd_id},</if>
			<if test="upd_id != null">UPD_DT = SYSDATE,</if>
		</set>
		<trim prefix="SET" suffixOverrides=","></trim>
		WHERE BOARD_MGMT_NO = #{board_mgmt_no} AND BOARD_NO = #{board_no}
	</update>
	
	<update id="deleteBoard" parameterType="board">
		/* boardDao.deleteBoard*/
		UPDATE BOARD SET DEL_YN = 'Y', UPD_DT = SYSDATE, UPD_ID = #{upd_id}
		WHERE BOARD_MGMT_NO = #{board_mgmt_no} AND BOARD_NO = #{board_no}
	</update>
	
	<update id="deleteChildBoard" parameterType="board">
		/* boardDao.deleteChildBoard*/
		UPDATE BOARD SET DEL_YN = 'Y', UPD_DT = SYSDATE, UPD_ID = #{upd_id}
		WHERE BOARD_MGMT_NO = #{board_mgmt_no} AND REF_BOARD_NO = #{ref_board_no}
		<choose>
			<when test="depth eq 0">
				AND LVL <![CDATA[>]]> #{lvl}
			</when>
			<otherwise>
				AND TOP_BOARD_NO = #{board_no} AND LVL <![CDATA[>]]> #{lvl}
			</otherwise>
		</choose>
	</update>
	
	<update id="updateReplyLevel" parameterType="board">
		/* boardDao.updateReplyLevel*/
		UPDATE BOARD SET LVL = LVL + 1
		WHERE BOARD_MGMT_NO = #{board_mgmt_no} AND REF_BOARD_NO = #{ref_board_no} AND LVL > ${lvl}
	</update>
	
	<select id="boardCommentList" parameterType="boardComment" resultType="boardComment">
		/* boardDao.boardCommentList*/
		SELECT A.COMMENT_SEQ, A.CONTENTS AS COMMENT_CONTENTS,
			TO_CHAR(A.REG_DT, 'YYYY-MM-DD HH24:MI') AS REG_DT, A.REG_ID, B.USER_NM AS REG_NM
		FROM BOARD_COMMENT A, USERS B
		WHERE A.BOARD_MGMT_NO = #{board_mgmt_no}
		AND A.BOARD_NO = #{board_no}
		AND A.REG_ID = B.USER_ID
		AND A.DEL_YN = 'N'
	</select>
	
	<select id="getNoticeFileCnt" parameterType="board">
		SELECT COUNT(*)
		  FROM BOARD_ATTACH_FILE
		 WHERE BOARD_MGMT_NO = #{board_mgmt_no} 
		   AND BOARD_NO = #{board_no}
	</select>
	
	<select id="readNoticeFiles" parameterType="board" resultType="board">
		/* boardDao.readNoticeFiles */
		SELECT * FROM BOARD_ATTACH_FILE WHERE BOARD_MGMT_NO = #{board_mgmt_no} AND BOARD_NO = #{board_no} ORDER BY FILE_SEQ
	</select>

	<select id="getTempBoard" parameterType="board" resultType="board">
		/* boardDao.getTempBoard */
		SELECT * FROM BOARD_ATTACH_FILE WHERE BOARD_MGMT_NO = #{board_mgmt_no} AND BOARD_NO = #{board_no} ORDER BY FILE_SEQ
	</select>
	
	<insert id="insertNoticeAttachFiles" parameterType="board">
		/* boardDao.insertNoticeAttachFiles */
		INSERT INTO BOARD_ATTACH_FILE 
			 ( BOARD_MGMT_NO
			 , BOARD_NO
			 , FILE_SEQ
			 , FILE_NM
			 , ORG_FILE_NM
			 , FILE_SIZE
			 , FILE_EXT_NM
			 ) 
			   VALUES 
			 ( #{board_mgmt_no}
			 , (
				SELECT NVL(MAX(BOARD_NO),1)
				  FROM BOARD
				 WHERE BOARD_MGMT_NO = #{board_mgmt_no}
			   )
			 , (
				SELECT NVL(MAX(FILE_SEQ) + 1, 1) FILE_SEQ 
				  FROM BOARD_ATTACH_FILE
				 WHERE BOARD_MGMT_NO = #{board_mgmt_no}
				   AND BOARD_NO = (
									SELECT NVL(MAX(BOARD_NO),1)
									  FROM BOARD
									 WHERE BOARD_MGMT_NO = #{board_mgmt_no}
								  )
			   )
			 , #{file_nm}
			 , #{org_file_nm}
			 , #{file_size}
			 , #{file_ext_nm}
			 )
	</insert>
	
	<insert id="updateNoticeAttachFiles" parameterType="board">
		/* boardDao.updateNoticeAttachFiles */
		INSERT INTO BOARD_ATTACH_FILE 
			 ( BOARD_MGMT_NO
			 , BOARD_NO
			 , FILE_SEQ
			 , FILE_NM
			 , ORG_FILE_NM
			 , FILE_SIZE
			 , FILE_EXT_NM
			 )
			  VALUES 
			 ( #{board_mgmt_no}
			 , #{board_no}
			 , (
				SELECT NVL(MAX(FILE_SEQ) + 1, 1) FILE_SEQ
				  FROM BOARD_ATTACH_FILE
				 WHERE BOARD_MGMT_NO = #{board_mgmt_no}
				   AND BOARD_NO = #{board_no}
			   )
			 , #{file_nm}
			 , #{org_file_nm}
			 , #{file_size}
			 , #{file_ext_nm})
	</insert>
	
	<select id="getBoardCommentSeq" parameterType="boardComment" resultType="string">
		/* boardDao.getBoardCommentSeq*/
		SELECT NVL(MAX(COMMENT_SEQ) + 1, 1) AS COMMENT_SEQ
		FROM BOARD_COMMENT
		WHERE BOARD_MGMT_NO = #{board_mgmt_no} AND BOARD_NO = #{board_no}	
	</select>
	
	<insert id="insertBoardComment" parameterType="boardComment">
		/* boardDao.insertBoardComment*/
		INSERT INTO BOARD_COMMENT (
			BOARD_MGMT_NO, BOARD_NO, COMMENT_SEQ, CONTENTS, DEL_YN, REG_DT, REG_ID )
		VALUES (
			#{board_mgmt_no}, #{board_no}, #{comment_seq}, #{comment_contents}, 'N', SYSDATE, #{reg_id}
		)	
	</insert>
	
	<update id="deleteBoardComment" parameterType="boardComment">
		/* boardDao.deleteBoardComment */
		UPDATE BOARD_COMMENT SET DEL_YN = 'Y', UPD_DT = SYSDATE, UPD_ID = #{upd_id}
		WHERE BOARD_MGMT_NO = #{board_mgmt_no} AND BOARD_NO = #{board_no} AND COMMENT_SEQ = #{comment_seq}
	</update>
</mapper>