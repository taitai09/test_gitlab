<?xml version="1.0" encoding="UTF-8"?>

<config xmlns="http://www.navercorp.com/lucy-xss-servlet">
	<defenders>
		<!-- XssPreventer 등록 -->
		<defender>
			<name>xssPreventerDefender</name>
			<class>com.navercorp.lucy.security.xss.servletfilter.defender.XssPreventerDefender</class>
		</defender>
		
		<!-- XssSaxFilter 등록 -->
		<defender>
			<name>xssSaxFilterDefender</name>
			<class>com.navercorp.lucy.security.xss.servletfilter.defender.XssSaxFilterDefender</class>
			<init-param>
				<param-value>lucy-xss-sax.xml</param-value>	<!-- lucy-xss-filter의 sax용 설정파일 -->
				<param-value>true</param-value>		<!-- 필터링된 코멘트를 남길지 여부, 성능 효율상 false 추천 -->
			</init-param>
		</defender>
		
		<!-- XssFilter 등록 -->
		<defender>
			<name>xssFilterDefender</name>
			<class>com.navercorp.lucy.security.xss.servletfilter.defender.XssFilterDefender</class>
			<init-param>
				<param-value>lucy-xss.xml</param-value>	<!-- lucy-xss-filter의 dom용 설정파일 -->
				<param-value>false</param-value>		 <!-- 필터링된 코멘트를 남길지 여부, 성능 효율상 false 추천 -->
			</init-param>
		</defender>
	</defenders>
	
	<!-- default defender 선언, 별다른 defender 선언이 없으면 default defender를 사용해 필터링 한다. -->
	<default>
		<defender>xssSaxFilterDefender</defender>
	</default>
	
	<!-- global 필터링 룰 선언 -->
	<global>
		<!-- 모든 url에서 들어오는 globalParameter 파라메터는 필터링 되지 않으며 
				또한 globalPrefixParameter로 시작하는 파라메터도 필터링 되지 않는다. -->
		<params>
			<param name="globalParameter" useDefender="false" />
			<param name="globalPrefixParameter" usePrefix="true" useDefender="false" />
		</params>
	</global>
	
	<!-- url 별 필터링 룰 선언 -->
	<url-rule-set>
<!--	url disable이 true이면 지정한 url 내의 모든 파라메터는 필터링 되지 않는다. -->

		<url-rule>
			<!-- 배포전 성능점검 > 성능 점검 관리 > 성능 점검 결과 탭 > 프로그램 정보 탭 -->
			<url disable="true">/PerfCheckResultList/createPerfChkResultTab2BodySelect</url>
		</url-rule>
		<url-rule>
			<!-- 실행 SQL 성능 검증 > 성능 검증 관리 > 성능 검증 결과 탭 > 프로그램 정보 탭 -->
			<url disable="true">/perfInspectMng/programInfoBodySelect</url>
		</url-rule>
		<url-rule>
			<!-- SQL 성능 분석 > 모듈 성능 분석 > SQL 성능 분석 > SQL Monitor 버튼 -->
			<url disable="true">/SQLPerformance/SQLMonitor</url>
		</url-rule>
		<url-rule>
			<!-- DB 구조 품질 점검 > 구조 품질점검 작업 > 품질검토작업 버튼 -->
			<url disable="true">/Mqm/QualityInspectionJob/Save</url>
		</url-rule>
		<url-rule>
			<!-- DB 구조 품질 점검 > 구조 품질점검 RULE 관리 > 저장 -->
			<url disable="true">/Mqm/QualityCheckSql/Save</url>
		</url-rule>
		<url-rule>
			<!-- DB 구조 품질 점검 > 프로젝트 구조 품질점검 지표/RULE 관리 > 저장 -->
			<url disable="true">/Mqm/ProjectQualityCheckRuleMng/Save</url>
		</url-rule>
		<url-rule>
			<!-- SQL 표준 점검 > 프로젝트 SQL 품질점검 RULE 관리 > 저장 -->
			<url disable="true">/ProjectSqlQtyChkRule/Save</url>
		</url-rule>
		<url-rule>
			<!-- SQL 셀프 성능 점검 > 성능 점검 수행 버튼 -->
			<url disable="true">/SelfTuning/SelfTestNew</url>
		</url-rule>
		<url-rule>
			<!-- SQL 셀프 성능 점검 > ExplainPlan 버튼 -->
			<url disable="true">/SelfTuning/ExplainPlanTree</url>
		</url-rule>
		<url-rule>
			<!-- [SQL 셀프 성능 점검 > 인덱스 자동설계 버튼 > 인덱스 자동설계 버튼] SQL 중 ">" 기호가 HTML로 변환되는 문제 -->
			<url disable="true">/SelfTuning/StartSelfIndexAutoDesign</url>
		</url-rule>
		<url-rule>
			<!-- 성능 검증 > SQL 성능 추적 현황 > 성능 점검 SQL > SQLs 탭 > 프로그램 정보 탭 -->
			<url disable="true">/Sqls/convertPerfChkResult</url>
		</url-rule>
		<url-rule>
			<!-- 성능 점검 > SQL 표준 품질점검 설정 > SQL 품질점검 RULE 관리 -->
			<url disable="true">/saveMaintainQualityCheckSql</url>
		</url-rule>
		<url-rule>
			<!-- SQL표준점검 > SQL표준품질점검설정 > 솔루션프로그램 RULE 관리 -->
			<url disable="true">/SolutionProgramMng/ProgramRule/Save</url>
		</url-rule>
		<url-rule>
			<!-- SQL표준점검 > SQL표준품질점검설정 > SQL 품질점검 지표관리 -->
			<url disable="true">/saveMaintainQualityCheckIndicator</url>
		</url-rule>
		<url-rule>
			<!-- SQL표준점검 > SQL표준품질점검설정 > SQL 품질점검 지표관리 -->
			<url disable="true">/getTableColumn</url>
		</url-rule>
		<url-rule>
			<!-- SQL표준점검 > 수집SQL인덱스 설계 > 테이블상세정보 > Access Path 현황 클릭 > SQL현황 -->
			<url disable="true">/CollectionIndexDesign/SQLStatus</url>
		</url-rule>
		<url-rule>
			<!-- SQL표준점검 > 적재SQL인덱스 설계 > 테이블상세정보 > Access Path 현황 클릭 > SQL현황 -->
			<url disable="true">/LoadIndexDesign/SQLStatus</url>
		</url-rule>
		<url-rule>
			<!-- 설정 > SQL Editor > 실행 -->
			<url disable="true">/SQLEditor/Retrieve</url>
		</url-rule>
<!-- 		<url-rule> -->
			<!-- 공지사항 > 조회 -->
<!-- 			<url disable="true">/Board/List</url> -->
<!-- 		</url-rule> -->
		<url-rule>
			<!-- 공지사항 > 수정 -->
			<url disable="true">/Board/UpdateAction</url>
		</url-rule>
<!-- 		<url-rule> -->
			<!-- 설정 > 자동선정 > 자동선정 탭 > TableGridList -->
<!-- 			<url disable="true">/AutoSelection/Save</url> -->
<!-- 		</url-rule> -->
		
<!--	<url-rule>
			<url disable="true">/disableUrl1.do</url>
		</url-rule>
		
		url1 내의 url1Parameter는 필터링 되지 않으며 또한 url1PrefixParameter로 시작하는 파라메터도 필터링 되지 않는다.
		<url-rule>
			<url>/url1.do</url>
			<params>
				<param name="url1Parameter" useDefender="false" />
				<param name="url1PrefixParameter" usePrefix="true" useDefender="false" />
			</params>
		</url-rule>
		
		url2 내의 url2Parameter1만 필터링 되지 않으며 url2Parameter2는 xssSaxFilterDefender를 사용해 필터링 한다. 
		<url-rule>
			<url>/url2.do</url>
			<params>
				<param name="url2Parameter1" useDefender="false" />
				<param name="url2Parameter2">
					<defender>xssSaxFilterDefender</defender>
				</param>
			</params>
		</url-rule> -->
		<url-rule>
			<!-- 인덱스 자동 분석 -->
			<url disable="true">/AISQLPVAnalyze/setSqlAutoPerfChk</url>
		</url-rule>
		<url-rule>
			<!-- SQL 품질 진단 스케줄러 관리 등록 -->
			<url disable="true">/SQLDiagnosisReportManageScheduler/insertSQLDiagnosisReportScheduler</url>
		</url-rule>
		<url-rule>
			<!-- SQL 품질 진단 스케줄러 관리 등록 -->
			<url disable="true">/SQLDiagnosisReportManageScheduler/updateSQLDiagnosisReportScheduler</url>
		</url-rule>
	</url-rule-set>
</config>